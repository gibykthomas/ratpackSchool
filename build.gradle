buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
        classpath 'org.jooq:jooq-codegen:3.7.4'
        classpath 'com.h2database:h2:1.4.177'
    }
}

apply plugin: 'org.junit.platform.gradle.plugin'


repositories {
    mavenCentral()
}

compileJava {
    options.compilerArgs << '-parameters'
}

apply plugin:'java'

junitPlatform {
    // platformVersion '1.0.1'
    filters {
        engines {
            // include 'junit-jupiter', 'junit-vintage'
            // exclude 'custom-engine'
        }
        tags {
            // include 'fast'
            exclude 'slow'
        }
        // includeClassNamePattern '.*Test'
    }
    // enableStandardTestTask true
    // reportsDir file('build/test-results/junit-platform') // this is the default
    logManager 'org.apache.logging.log4j.jul.LogManager'
}

sourceSets {
    main {
        java {
            srcDir "${buildDir}/generated-sources/java/"
        }
    }
}

dependencies {
    // https://mvnrepository.com/artifact/io.ratpack/ratpack-core
    compile group: 'io.ratpack', name: 'ratpack-core', version: '1.5.0'
    compile group: 'io.vavr', name: 'vavr', version: '0.9.1'


    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.6'
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-parameter-names', version: '2.8.6'
    compile group: 'io.vavr', name: 'vavr-jackson', version: '0.9.1'

    testCompile group: 'io.ratpack', name: 'ratpack-test', version: '1.5.0'
    testCompile("org.junit.jupiter:junit-jupiter-api:5.0.0")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.0.0")

    //JOOQ
    compile 'org.jooq:jooq:3.7.4'
    runtime 'com.h2database:h2:1.4.177'
}

// Use your favourite XML builder to construct the code generation configuration file
// ----------------------------------------------------------------------------------
def writer = new StringWriter()
def xml = new groovy.xml.MarkupBuilder(writer)
        .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.7.0.xsd') {
    jdbc() {
        driver('org.h2.Driver')
        url('jdbc:h2:~/lifeLog')
        user('sa')
        password('')
    }
    generator() {
        database() {
        }

        generate([:]) {
            pojos true
            daos false
        }
        target() {
            packageName('pl.setblack.ratschool.lifelog')
            directory('build/generated-sources/java')
        }
    }
}

// Run the code generator
// ----------------------
org.jooq.util.GenerationTool.generate(
        javax.xml.bind.JAXB.unmarshal(new StringReader(writer.toString()), org.jooq.util.jaxb.Configuration.class)
)